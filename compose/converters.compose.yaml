services:
  thumbnailer-converter:
    container_name: converter-thumbnailer
    build:
      context: ../converters/thumbnailer
      dockerfile: Dockerfile
    environment:
      THUMBNAILER_CONVERTER_PORT: ${THUMBNAILER_CONVERTER_PORT}
      NATS_USER: ${NATS_USER}
      NATS_PASSWORD: ${NATS_PASSWORD}
      NATS_HOST: ${NATS_HOST}
      NATS_CLIENT_PORT: ${NATS_CLIENT_PORT}
      THUMBNAILER_CONVERTER_VERSION: ${THUMBNAILER_CONVERTER_VERSION}
      WS_PROXY_HOST: ${WS_PROXY_HOST}
      WS_PROXY_PORT: ${WS_PROXY_PORT}
    volumes:
      - ../converters/thumbnailer:/converters/thumbnailer
    networks:
      - entask
    expose:
      - "${THUMBNAILER_CONVERTER_PORT}"
    depends_on:
      - nats-1
      - nats-2
      - nats-3
      - conversion-service
    develop:
      watch:
        - action: sync+restart
          path: ../converters/thumbnailer
          target: /converters/thumbnailer

  waveformer-converter:
    container_name: converter-waveformer
    build:
      context: ../converters/waveformer
      dockerfile: Dockerfile
    environment:
      WAVEFORMER_CONVERTER_PORT: ${WAVEFORMER_CONVERTER_PORT}
      NATS_USER: ${NATS_USER}
      NATS_PASSWORD: ${NATS_PASSWORD}
      NATS_HOST: ${NATS_HOST}
      NATS_CLIENT_PORT: ${NATS_CLIENT_PORT}
      WAVEFORMER_CONVERTER_VERSION: ${WAVEFORMER_CONVERTER_VERSION}
      WS_PROXY_HOST: ${WS_PROXY_HOST}
      WS_PROXY_PORT: ${WS_PROXY_PORT}
    volumes:
      - ../converters/waveformer:/converters/waveformer
    networks:
      - entask
    expose: 
      - "${WAVEFORMER_CONVERTER_PORT}"
    depends_on:
      - nats-1
      - nats-2
      - nats-3
      - conversion-service
    develop:
      watch:
        - action: sync+restart
          path: ../converters/waveformer
          target: /converters/waveformer
  
  text-recognizer-converter:
    container_name: converter-text-recognizer
    build:
      context: ../converters/text-recognizer
      dockerfile: Dockerfile
    environment:
      TEXT_RECOGNIZER_CONVERTER_PORT: ${TEXT_RECOGNIZER_CONVERTER_PORT}
      NATS_USER: ${NATS_USER}
      NATS_PASSWORD: ${NATS_PASSWORD}
      NATS_HOST: ${NATS_HOST}
      NATS_CLIENT_PORT: ${NATS_CLIENT_PORT}
      CONDUCTOR_UI_SERVER_HOST: ${CONDUCTOR_UI_SERVER_HOST}
      CONDUCTOR_UI_SERVER_PORT: ${CONDUCTOR_UI_SERVER_PORT}
      WS_PROXY_HOST: ${WS_PROXY_HOST}
      WS_PROXY_PORT: ${WS_PROXY_PORT}
    volumes:
      - "../converters/text-recognizer:/converters/text-recognizer"
    networks:
      - entask
    expose:
      - "${TEXT_RECOGNIZER_CONVERTER_PORT}"
    depends_on:
      - nats-1
      - nats-2
      - nats-3
      - conversion-service
      - conductor-server
    develop:
      watch:
        - action: sync+restart
          path: ../converters/text-recognizer
          target: /converters/text-recognizer
          
  # term-extractor-converter:
  #   container_name: converter-term-extractor
  #   build:
  #     context: ../converters/term-extractor
  #     dockerfile: Dockerfile
  #   environment:
  #     TERM_EXTRACTOR_CONVERTER_HOST: ${TERM_EXTRACTOR_CONVERTER_HOST}
  #     TERM_EXTRACTOR_CONVERTER_PORT: ${TERM_EXTRACTOR_CONVERTER_PORT}
  #     TERM_EXTRACTOR_CONVERTER_VERSION: ${TERM_EXTRACTOR_CONVERTER_VERSION}
  #     NATS_USER: ${NATS_USER}
  #     NATS_PASSWORD: ${NATS_PASSWORD}
  #     NATS_HOST: ${NATS_HOST}
  #     NATS_CLIENT_PORT: ${NATS_CLIENT_PORT}
  #   volumes:
  #     - "../converters/term-extractor:/converters/term-extractor"
  #   networks:
  #     - entask
  #   expose:
  #     - "${TERM_EXTRACTOR_CONVERTER_PORT}"
  #   depends_on:
  #     - nats-1
  #     - nats-2
  #     - nats-3
  #     - conversion-service
  #   develop:
  #     watch:
  #       - action: sync+restart
  #         path: ../converters/term-extractor
  #         target: /converters/term-extractor      
  
